// <auto-generated />
using System;
using DiplomWork.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiplomWork.Persistance.Migrations
{
    [DbContext(typeof(DiplomWorkDbContext))]
    [Migration("20250424195943_init456")]
    partial class init456
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiplomWork.Models.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<long>("EndPeriod")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Limit")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StartPeriod")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("DiplomWork.Models.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("BudgetId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("DiplomWork.Models.ExpenseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.ToTable("ExpenseCategories");
                });

            modelBuilder.Entity("DiplomWork.Models.Profit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Profits");
                });

            modelBuilder.Entity("DiplomWork.Models.ProfitCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.ToTable("ProfitCategories");
                });

            modelBuilder.Entity("DiplomWork.Models.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Limit")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("DiplomWork.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiplomWork.Models.Budget", b =>
                {
                    b.HasOne("DiplomWork.Models.ExpenseCategory", "Category")
                        .WithOne("Budget")
                        .HasForeignKey("DiplomWork.Models.Budget", "CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("Budgets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiplomWork.Models.Expense", b =>
                {
                    b.HasOne("DiplomWork.Models.Budget", "Budget")
                        .WithMany("Expenses")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DiplomWork.Models.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("Expenses")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiplomWork.Models.ExpenseCategory", b =>
                {
                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("OwnerID");
                });

            modelBuilder.Entity("DiplomWork.Models.Profit", b =>
                {
                    b.HasOne("DiplomWork.Models.ProfitCategory", "Category")
                        .WithMany("Profits")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("Profits")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiplomWork.Models.ProfitCategory", b =>
                {
                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("ProfitCategories")
                        .HasForeignKey("OwnerID");
                });

            modelBuilder.Entity("DiplomWork.Models.Target", b =>
                {
                    b.HasOne("DiplomWork.Models.User", null)
                        .WithMany("Targets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomWork.Models.Budget", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("DiplomWork.Models.ExpenseCategory", b =>
                {
                    b.Navigation("Budget");

                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("DiplomWork.Models.ProfitCategory", b =>
                {
                    b.Navigation("Profits");
                });

            modelBuilder.Entity("DiplomWork.Models.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("ExpenseCategories");

                    b.Navigation("Expenses");

                    b.Navigation("ProfitCategories");

                    b.Navigation("Profits");

                    b.Navigation("Targets");
                });
#pragma warning restore 612, 618
        }
    }
}
